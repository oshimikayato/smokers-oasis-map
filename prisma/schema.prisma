// Prisma schema for SmokingSpot
// 保存先: prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL") // Vercel用の直接接続URL
}

model SmokingSpot {
  id          Int      @id @default(autoincrement())
  name        String
  lat         Float
  lng         Float
  address     String?
  description String?
  category    String   // "喫煙所" or "飲食店"
  tags        String[] // 例: ["屋内", "分煙", "無料", "Wi-Fiあり"]
  feedbacks   Feedback[]
  photos      Photo[]  // 写真との関連を追加
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Feedback {
  id            Int           @id @default(autoincrement())
  spot          SmokingSpot   @relation(fields: [spotId], references: [id])
  spotId        Int
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  found         Boolean?      // あった/なかった
  rating        Int?          // 1〜5段階評価
  comment       String?
  reportType    String?       // "閉鎖"や"移動"などの修正種別
}

model Photo {
  id          Int          @id @default(autoincrement())
  spot        SmokingSpot  @relation(fields: [spotId], references: [id])
  spotId      Int
  url         String       // 画像のURL
  caption     String?      // キャプション
  uploadedBy  String?      // アップロードしたユーザー（将来的にUserモデルと関連付け可能）
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}
